// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Mandat {
  id                 Int           @id @default(autoincrement())
  reference          String        @unique
  mandat_numero      String        @unique
  type_offre_code    String
  type_offre         String
  corps              String
  prix               Int
  charges            String?
  foncier            Int?
  type_mandat        String
  type_bien          String
  type_bien_code     String
  surface_habitable  Int?
  nb_pieces          Int?
  chambres           Int?
  nb_etages          Int?
  etage              Int?
  sdb                Int?
  wc                 Int?
  cuisine            Int?
  energie_chauffage  String?
  format_chauffage   String?
  parking            Int?
  piscine            Boolean?
  terrasse           Int?
  exposition         String?
  annee_construction String?
  ascenseur          Boolean?
  balcon             Int?
  ville              String
  cp                 Int?
  departement        String
  isNotAvailable     Boolean?
  statut             String?
  meuble             Boolean?
  dateEnr            DateTime?
  dateMaj            DateTime?
  latitude           Float?
  longitude          Float?
  video_link         String?
  urlBien            String?
  publishedInWebSite Boolean?
  publishedInApp     Boolean?
  visite_immediat    Boolean?
  bien_category      String?
  chauffages         String?
  photos             MandatPhoto[]
}

model MandatPhoto {
  id       Int     @id @default(autoincrement())
  mandatId Int
  filename String  @db.VarChar(255)
  src      String  @default("") @db.VarChar(255)
  position Int?
  mandat   Mandat? @relation(fields: [mandatId], references: [id], onDelete: Restrict, onUpdate: Restrict)

  @@index([mandatId])
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique @db.VarChar(255)
  authToken      String?   @db.VarChar(255)
  tokenCreatedAt DateTime?
  isSubscribed   Boolean   @default(true)
  createdAt      DateTime  @default(now())

  @@index([email])
}

model SearchQuery {
  id        String   @id @default(cuid())
  sessionId String?  @db.VarChar(255)
  email     String?  @db.VarChar(255)
  criteria  Json
  userAgent String?
  ip        String?
  createdAt DateTime @default(now())

  @@index([sessionId])
  @@index([email])
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  firstName String?  @db.VarChar(100)
  lastName  String?  @db.VarChar(100)
  email     String   @db.VarChar(255)
  phone     String?  @db.VarChar(30)
  subject   String?  @db.VarChar(255)
  message   String?
  createdAt DateTime @default(now())

  @@index([email])
}

model DataSearch {
  id        Int      @id @default(autoincrement())
  nb_pieces Int? // ou Int? selon ton besoin
  type_bien String?
  prixMin   Int?
  prixMax   Int?
  secteur   Int?
  createdAt DateTime @default(now())
}

model Abonne {
  id                  String    @id @default(uuid())
  email               String    @unique
  dateInscription     DateTime  @default(now())
  dateDesinscription  DateTime?
  statutActif         Boolean   @default(true)
  token               String?
  tokenDesinscription String?
  tokenSuppression    String?
}
