// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Mandat {
  id                 Int      @id @default(autoincrement())
  reference          String   @unique
  typeOffreCode      String
  typeOffre          String
  corps              String
  prix               Int
  charges            String?
  foncier            Int?
  typeMandat         String
  typeBien           String
  typeBienCode       String
  surfaceHabitable   Int?
  nbPieces           Int?
  chambres           Int?
  nbEtages           Int?
  etage              Int?
  sdb                Int?
  wc                 Int?
  cuisine            Int?
  energieChauffage   String?
  formatChauffage    String?
  parking            Int?
  piscine            Boolean?
  terrasse           Int?
  exposition         String?
  anneeConstruction  Int?
  ascenseur          Boolean?
  balcon             Int?
  ville              String
  cp                 Int?
  departement        String
  isNotAvailable     Boolean?
  statut             String?
  meuble             Boolean?
  dateEnr            DateTime?
  dateMaj            DateTime?
  latitude           Float?
  longitude          Float?
  videoLink          String?
  urlBien            String?
  publishedInWebSite Boolean?
  publishedInApp     Boolean?
  visiteImmediat     Boolean?
  bienCategory       String?
  chauffages         String?
  photos            MandatPhoto[]
}

model MandatPhoto {
  id       Int     @id @default(autoincrement())
  mandatId Int
  filename String  @db.VarChar(255)
  src      String  @default("") @db.VarChar(255)
  position Int?
  mandat   Mandat? @relation(fields: [mandatId], references: [id], onDelete: Restrict, onUpdate: Restrict)

  @@index([mandatId])
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique @db.VarChar(255)
  authToken      String?   @db.VarChar(255)
  tokenCreatedAt DateTime?
  isSubscribed   Boolean   @default(true)
  createdAt      DateTime  @default(now())

  @@index([email])
}

model SearchQuery {
  id         String   @id @default(cuid())
  sessionId  String?  @db.VarChar(255)
  email      String?  @db.VarChar(255)
  criteria   Json
  userAgent  String?
  ip         String?
  createdAt  DateTime @default(now())

  @@index([sessionId])
  @@index([email])
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  firstName String?  @db.VarChar(100)
  lastName  String?  @db.VarChar(100)
  email     String   @db.VarChar(255)
  phone     String?  @db.VarChar(30)
  subject   String?  @db.VarChar(255)
  message   String?
  createdAt DateTime @default(now())

  @@index([email])
}
